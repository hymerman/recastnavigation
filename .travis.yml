dist: trusty
sudo: required

language: cpp

# Build with gcc and clang.
compiler:
  - gcc
  - clang

# Build both debug and release configurations, through use of an environment variable in the build matrix.
env:
  - CONFIGURATION=debug
  - CONFIGURATION=release
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.6
    packages:
    - gcc-5
    - g++-5
    - clang-3.8

before_install:
  - if [ "$CC" == "gcc" ]; then export CXX="g++-5" CC="gcc-5"; fi

install:
  # Download and build SDL2 from source.
  - mkdir dummyprefix
  - export PREFIX=$PWD/dummyprefix
  - export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig
  - export PATH=$PATH:$PWD/dummyprefix/bin
  - wget https://www.libsdl.org/release/SDL2-2.0.5.tar.gz -O SDL2.tar.gz
  - tar -xzf SDL2.tar.gz
  - cd SDL2-2.0.5
  - ./configure --prefix=$PREFIX
  - make -j5
  - make install
  - cd ..
  # Download and build premake5 from source; the Travis environment doesn't have the right version of glibc6 for the prebuilt binaries to work.
  - wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha6/premake-5.0.0-alpha6-src.zip -O premake.zip
  - unzip premake.zip
  - cd premake-5.0.0-alpha6/build/gmake.unix
  - make config=release
  - cd ../../..
  - mv premake-5.0.0-alpha6/bin/release/premake5 premake5

# Run premake to generate makefiles.
# Have to cd into directory and back out since premake5 doesn't appear to accept a directory argument.
before_script:
  - cd RecastDemo && ../premake5 gmake && cd ..

# Run make in the directory containing generated makefiles, on the configuration specified by the environment variable.
script:
  - export ORIG_CXXFLAGS=$CXXFLAGS
  - if [ "$CC" == "gcc-5" ]; then export CXXFLAGS="$ORIG_CXXFLAGS -std=c++03"; fi
  - if [ "$CC" == "clang" ]; then export CXXFLAGS="$ORIG_CXXFLAGS -std=c++03 -D__extern_always_inline=\"extern __always_inline\""; fi
  - make -C RecastDemo/Build/gmake -f DebugUtils.make config=$CONFIGURATION
  - make -C RecastDemo/Build/gmake -f Detour.make config=$CONFIGURATION
  - make -C RecastDemo/Build/gmake -f DetourCrowd.make config=$CONFIGURATION
  - make -C RecastDemo/Build/gmake -f DetourTileCache.make config=$CONFIGURATION
  - make -C RecastDemo/Build/gmake -f Recast.make config=$CONFIGURATION

  - if [ "$CC" == "gcc-5" ]; then export CXXFLAGS="$ORIG_CXXFLAGS -std=gnu++14"; fi
  - if [ "$CC" == "clang" ]; then export CXXFLAGS="$ORIG_CXXFLAGS -std=gnu++14 -D__extern_always_inline=\"extern __always_inline\""; fi
  - make -C RecastDemo/Build/gmake config=$CONFIGURATION
  - RecastDemo/Bin/Tests
