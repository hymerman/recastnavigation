dist: trusty
sudo: required

language: generic
os:osx

matrix:
  include:
    - os: linux
      env: COMPILER_NAME=g++ CXX=g++-5 CC=gcc-5 CONFIGURATION=debug
      addons:
        apt:
          source: &sources
            - llvm-toolchain-precise-3.8
            - llvm-toolchain-precise-3.7
            - llvm-toolchain-precise-3.6
            - ubuntu-toolchain-r-test
          packages:
            - g++-5

    - os: linux
      env: COMPILER_NAME=clang++ CXX=clang++-3.8 CC=clang-3.8 CONFIGURATION=debug
      addons:
        apt:
          sources: *sources
          packages:
            - clang-3.8

install:
  # Download and build SDL2 from source.
  - mkdir dummyprefix
  - export PREFIX=$PWD/dummyprefix
  - export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig
  - export PATH=$PATH:$PWD/dummyprefix/bin
  - wget https://www.libsdl.org/release/SDL2-2.0.5.tar.gz -O SDL2.tar.gz
  - tar -xzf SDL2.tar.gz
  - cd SDL2-2.0.5
  - ./configure --prefix=$PREFIX
  - make -j5
  - make install
  - cd ..
  # Download and build premake5 from source; the Travis environment doesn't have the right version of glibc6 for the prebuilt binaries to work.
  - wget https://github.com/premake/premake-core/releases/download/v5.0.0-alpha6/premake-5.0.0-alpha6-src.zip -O premake.zip
  - unzip premake.zip
  - cd premake-5.0.0-alpha6/build/gmake.unix
  - make config=release
  - cd ../../..
  - mv premake-5.0.0-alpha6/bin/release/premake5 premake5

# Run premake to generate makefiles.
# Have to cd into directory and back out since premake5 doesn't appear to accept a directory argument.
before_script:
  - cd RecastDemo && ../premake5 gmake && cd ..

# Run make in the directory containing generated makefiles, on the configuration specified by the environment variable.
script:
  - export ORIG_CXXFLAGS=$CXXFLAGS
  - if [ "$COMPILER_NAME" == "g++" ]; then export CXXFLAGS="$ORIG_CXXFLAGS -std=c++03"; fi
  - if [ "$COMPILER_NAME" == "clang++" ]; then export CXXFLAGS="$ORIG_CXXFLAGS -std=c++03 -D__extern_always_inline=\"extern __always_inline\""; fi
  - make -C RecastDemo/Build/gmake -f DebugUtils.make config=$CONFIGURATION
  - make -C RecastDemo/Build/gmake -f Detour.make config=$CONFIGURATION
  - make -C RecastDemo/Build/gmake -f DetourCrowd.make config=$CONFIGURATION
  - make -C RecastDemo/Build/gmake -f DetourTileCache.make config=$CONFIGURATION
  - make -C RecastDemo/Build/gmake -f Recast.make config=$CONFIGURATION

  - if [ "$COMPILER_NAME" == "g++" ]; then export CXXFLAGS="$ORIG_CXXFLAGS -std=c++14"; fi
  - if [ "$COMPILER_NAME" == "clang++" ]; then export CXXFLAGS="$ORIG_CXXFLAGS -std=c++14 -D__extern_always_inline=\"extern __always_inline\""; fi
  - make -C RecastDemo/Build/gmake config=$CONFIGURATION
  - RecastDemo/Bin/Tests
